import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:bhavik_s_application1/core/utils/size_utils.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.secondaryContainer,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.black900.withOpacity(0.39),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.56),
          fontSize: 14.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900.withOpacity(0.56),
          fontSize: 12.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 26.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 24.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.56),
          fontSize: 12.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.56),
          fontSize: 10.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 9.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 22.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF4254C2),
    primaryContainer: Color(0X0C110F5F),
    secondaryContainer: Color(0XFF4355C3),

    // Error colors
    errorContainer: Color(0XFF2F2477),
    onError: Color(0XFF005B84),
    onErrorContainer: Color(0XFFF3F4F7),

    // On colors(text colors)
    onPrimary: Color(0XFF030528),
    onPrimaryContainer: Color(0X3333A68D),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Bluea
  Color get blue1000a => Color(0X0AD0D6FF);

  // Blue
  Color get blue400 => Color(0XFF52AED6);

  // Bluef
  Color get blue7007f => Color(0X7F245EE1);

  // BlueAf
  Color get blueA2007f => Color(0X7F407BFF);
  Color get blueA4007f => Color(0X7F2875EA);

  // BlueGray
  Color get blueGray100 => Color(0XFFCBCED4);
  Color get blueGray10001 => Color(0XFFCFD6E7);
  Color get blueGray50 => Color(0XFFEEEEF3);
  Color get blueGray5001 => Color(0XFFEFF0F7);
  Color get blueGray5002 => Color(0XFFECECF4);
  Color get blueGray700 => Color(0XFF4E5370);
  Color get blueGray800 => Color(0XFF35384C);
  Color get blueGray900 => Color(0XFF2B2C30);
  Color get blueGray90011 => Color(0X111A1650);
  Color get blueGray90075 => Color(0X752A2259);

  // BlueGrayc
  Color get blueGray2006c => Color(0X6CB9BAD9);
  Color get blueGray7004c => Color(0X4C4A506C);

  // BlueGrayf
  Color get blueGray9007f => Color(0X7F22243C);

  // Cyan
  Color get cyan400 => Color(0XFF23C1C3);
  Color get cyan600 => Color(0XFF02A6BD);

  // Cyanf
  Color get cyan6007f => Color(0X7F00A7CC);

  // DeepOrange
  Color get deepOrange200 => Color(0XFFFDAB8E);

  // DeepPurple
  Color get deepPurple200 => Color(0XFFAC94D5);
  Color get deepPurple30099 => Color(0X99A167B0);
  Color get deepPurpleA100 => Color(0XFFA083EC);
  Color get deepPurpleA200 => Color(0XFF7A53EA);

  // DeepPurplef
  Color get deepPurple4007f => Color(0X7F8238CC);

  // Gray
  Color get gray100 => Color(0XFFEFF6FC);
  Color get gray10001 => Color(0XFFEFF6FD);
  Color get gray20066 => Color(0X66EBEBEB);
  Color get gray50 => Color(0XFFF9FAFC);
  Color get gray500 => Color(0XFF9C9C9C);
  Color get gray50000 => Color(0X0096969F);
  Color get gray50001 => Color(0XFF9A859E);
  Color get gray50033 => Color(0X33979797);
  Color get gray5003301 => Color(0X33A59E9E);
  Color get gray5001 => Color(0XFFF8F9FF);
  Color get gray5002 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF68697E);
  Color get gray900 => Color(0XFF0F1030);
  Color get gray90023 => Color(0X2306161F);
  Color get gray90099 => Color(0X99001B33);

  // GrayB
  Color get gray100B2 => Color(0XB2F1F2FA);
  Color get gray300B2 => Color(0XB2E0E0EA);

  // Grayc
  Color get gray3004c => Color(0X4CD9DCE4);
  Color get gray6006c => Color(0X6C867E7E);

  // GrayCc
  Color get gray300Cc => Color(0XCCDADDF1);

  // GrayE
  Color get gray50E0 => Color(0XE0F4F6FD);
  Color get gray50E001 => Color(0XE0F4F6FF);

  // Graya
  Color get gray8000a => Color(0X0A4A4A4A);

  // Grayf
  Color get gray9007f => Color(0X7F1B1D33);

  // Green
  Color get green300 => Color(0XFF81BF82);
  Color get green400 => Color(0XFF51FB62);
  Color get green900 => Color(0XFF068913);
  Color get greenA700 => Color(0XFF13B724);
  Color get greenA70001 => Color(0XFF14E229);

  // Indigo
  Color get indigo100 => Color(0XFFC8CCE5);
  Color get indigo10033 => Color(0X33CCD4EA);
  Color get indigo30019 => Color(0X197785D8);
  Color get indigo30033 => Color(0X33828AD9);
  Color get indigo40033 => Color(0X335275D6);
  Color get indigo50 => Color(0XFFE7E8EE);
  Color get indigo700 => Color(0XFF31479C);
  Color get indigo70019 => Color(0X192E3D9A);
  Color get indigo800 => Color(0XFF243D82);
  Color get indigo80066 => Color(0X66204883);
  Color get indigo90011 => Color(0X11153A66);
  Color get indigoA200 => Color(0XFF4C60DF);
  Color get indigoA20099 => Color(0X995952E8);
  Color get indigoA700 => Color(0XFF2850E7);

  // IndigoB
  Color get indigo100B2 => Color(0XB2CBCEE9);
  Color get indigo50B2 => Color(0XB2EBECF9);

  // LightBlue
  Color get lightBlue10066 => Color(0X66ACEBFF);
  Color get lightBlue30099 => Color(0X9959C2EC);
  Color get lightBlue80099 => Color(0X991180A8);
  Color get lightBlueA700 => Color(0XFF0186FF);

  // LightGreen
  Color get lightGreenA700 => Color(0XFF4FFF11);

  // Limef
  Color get lime7007f => Color(0X7FB2B526);

  // Orange
  Color get orange300 => Color(0XFFEEAE50);
  Color get orangeA100 => Color(0XFFF2D26A);

  // OrangeAa
  Color get orange300Aa => Color(0XAAF2C550);

  // Pink
  Color get pink200 => Color(0XFFF57DC5);

  // Purple
  Color get purple100 => Color(0XFFF4AFFD);
  Color get purple300 => Color(0XFFB366E3);
  Color get purple400 => Color(0XFFAE61A2);
  Color get purple500 => Color(0XFFA43091);
  Color get purple600 => Color(0XFF8B3A8D);
  Color get purple900 => Color(0XFF49188E);

  // Red
  Color get red100 => Color(0XFFFFD6C7);
  Color get red300 => Color(0XFFE06465);
  Color get red30099 => Color(0X99D78D79);
  Color get red400 => Color(0XFFC75B55);
  Color get red500 => Color(0XFFEC4242);
  Color get red600 => Color(0XFFF52424);
  Color get redA700 => Color(0XFFE90000);

  // Teal
  Color get teal300 => Color(0XFF3DB0BF);
  Color get teal500 => Color(0XFF05AF72);
  Color get teal50099 => Color(0X9904B684);
  Color get tealA70066 => Color(0X660DBD88);

  // TealAf
  Color get tealA7007f => Color(0X7F02BD9B);
  Color get tealA7007f01 => Color(0X7F02BD90);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow500 => Color(0XFFFFEC42);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
